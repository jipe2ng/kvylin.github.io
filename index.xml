<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>余的记忆 on 余的记忆</title>
    <link>https://kvylin.github.io/</link>
    <description>Recent content in 余的记忆 on 余的记忆</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 27 Nov 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>2038年问题</title>
      <link>https://kvylin.github.io/2018/2038/</link>
      <pubDate>Tue, 27 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kvylin.github.io/2018/2038/</guid>
      <description>

&lt;h2 id=&#34;什么是-2038年问题&#34;&gt;什么是“2038年问题”?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2038年问题&lt;/strong&gt;可能会导致某些软件在2038年1月19日3时14分07秒之后无法正常工作。所有使用POSIX时间表示时间的程序都将受其影响，因为它们以自1970年1月1日经过的秒数（忽略闰秒）来表示时间。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在大部分的32位操作系统上，此“time” 数据模式使用一个有正负号的32位整数（signed int32）存储计算的秒数。依照此“time_t”标准，在此格式能被表示的最后时间是&lt;strong&gt;2038年1月19日03:14:07&lt;/strong&gt; 。&lt;/p&gt;

&lt;h2 id=&#34;有什么影响&#34;&gt;有什么影响？&lt;/h2&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;超过此一瞬间，时间将会“绕回&amp;rdquo;溢出&amp;rdquo;)”（wrap around）且在内部被表示为一个负数，并造成程序无法工作，因为它们无法将此时间识别为2038年，而可能会依个别实现而跳回1970年或1901年。因此可能产生错误的计算及动作。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;有少数的情况下，在制定规格时，特别规定以无正负号的32位整数（unsigned int32）存储 POSIX 时间，因此错误会被延后到 2106 年。例如比特币区块链中的区块时间戳记，就是以这种方法存储。&lt;/p&gt;

&lt;h2 id=&#34;嵌入式系统&#34;&gt;嵌入式系统&lt;/h2&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;有数以亿计的32位系统在运行中，特别是许多嵌入式系统。相对于一般计算机科技18至24个月的革命性更新，嵌入式系统可能直至使用寿命终结都不会改变。32位time_t的使用亦被编码于文件格式，例如众所周知的ZIP压缩格式。其能存在的时间远比受影响的机器长。
&lt;strong&gt;新的64位运算器可以记录至约2900亿年后的292,277,026,596年12月4日15:30:08，星期日（UTC）&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;网络时间协议-network-time-protocol-简称-ntp&#34;&gt;网络时间协议（&lt;strong&gt;Network Time Protocol&lt;/strong&gt;，简称&lt;strong&gt;NTP&lt;/strong&gt;）&lt;/h2&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>TCP BBR擁塞控制算法</title>
      <link>https://kvylin.github.io/2018/centos%E9%96%8B%E5%95%93bbr%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kvylin.github.io/2018/centos%E9%96%8B%E5%95%93bbr%E5%8A%9F%E8%83%BD/</guid>
      <description>

&lt;h1 id=&#34;tcp-bbr擁塞控制算法&#34;&gt;TCP BBR擁塞控制算法&lt;/h1&gt;

&lt;p&gt;BBR是谷歌在2016年提出的TCP擁塞控制算法，極大地提高了TCP的吞吐量，在Linux4.9的patch中正式加入。&lt;a href=&#34;https://github.com/google/bbr&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;項目更新在這裏&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;前提&#34;&gt;前提&lt;/h2&gt;

&lt;h3 id=&#34;tcp基於丟包的擁塞控制&#34;&gt;TCP基於丟包的擁塞控制&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;慢啓動階段：在建立新的TCP連接時，擁塞窗口（congestion window , 即cwnd）會初始化爲一個數據包大小，源斷按cwnd大小發送數據，每收到一個ACK確認，cwnd就增加一個數據包發送量，如此cwnd會隨着回路響應時間（RTT）的增加而增長。&lt;/li&gt;
&lt;li&gt;擁塞避免階段：若源斷發現超時或收到3個相同的ACK時，便認爲網絡發生了擁塞，進入擁塞避免階段。慢啓動閾值（ssthresh）被設置爲cwnd的一半；如果超時，擁塞窗口被置1。當cwnd&amp;gt;ssthresh，TCP就會執行擁塞避免算法。&lt;/li&gt;
&lt;li&gt;快速重傳階段：在這個階段中，接受方在收到失序的報文段後會馬上發出重複確認，而不要等到自己發送數據時捎帶確認。&lt;/li&gt;
&lt;li&gt;快速恢復階段：&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;bbr-v2更新啦-2018&#34;&gt;BBR v2更新啦（2018）&lt;/h2&gt;

&lt;h2 id=&#34;centos7下開啓bbr擁塞控制算法&#34;&gt;CentOS7下開啓BBR擁塞控制算法&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;查看Linux內核版本&lt;code&gt;unmae -a&lt;/code&gt;
開啓BBR的要求之一是內核版本必須在4.9以上&lt;/li&gt;
&lt;li&gt;升級內核版本

&lt;ul&gt;
&lt;li&gt;添加ELRepo GPG key&lt;code&gt;rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加源&lt;code&gt;rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安裝fastestmirror&lt;code&gt;yum install yum-plugin-fastestmirror&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安裝最新Kernel&lt;code&gt;yum --enablerepo=elrepo-kernel install kernel-ml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切換到新內核並重啓&lt;code&gt;grub2-set-default 0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;開啓BBR

&lt;ul&gt;
&lt;li&gt;在終端中輸入
&lt;code&gt;vi /etc/sysctl.conf&lt;/code&gt;，並加入
&lt;code&gt;
net.core.default_qdisc=tcp_bbr
net.ipv4.tcp_congestion_control=bbr
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;檢查是否設置成功
&lt;code&gt;
sysctl net.ipv4.tcp_available_congestion_control
sysctl net.ipv4.tcp_congestion_control
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;檢查BBR是否正常運行&lt;code&gt;lsmod | grep tcp_bbr&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>大道至簡Hexo</title>
      <link>https://kvylin.github.io/2018/%E5%A4%A7%E9%81%93%E8%87%B3%E7%B0%A1hexo/</link>
      <pubDate>Mon, 03 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kvylin.github.io/2018/%E5%A4%A7%E9%81%93%E8%87%B3%E7%B0%A1hexo/</guid>
      <description>

&lt;h1 id=&#34;大道至簡hexo&#34;&gt;大道至簡Hexo&lt;/h1&gt;

&lt;p&gt;Hexo 是一個由&lt;a href=&#34;http://nodejs.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Node.js&lt;/a&gt;構建的快速、簡單且強大的網誌框架。&lt;/p&gt;

&lt;h1 id=&#34;安裝&#34;&gt;安裝&lt;/h1&gt;

&lt;h2 id=&#34;安裝環境&#34;&gt;安裝環境&lt;/h2&gt;

&lt;p&gt;Mac用戶在編譯時可能會碰到問題，請先至 App Store 安裝 Xcode，一旦 Xcode 安裝完成後，開啟它並前往 &lt;strong&gt;Preferences -&amp;gt; Download -&amp;gt; Command Line Tools -&amp;gt; Install&lt;/strong&gt; 安裝命令列工具。&lt;/p&gt;

&lt;h3 id=&#34;安裝node-js&#34;&gt;安裝Node.js&lt;/h3&gt;

&lt;p&gt;既然是由Node.js構建的網志框架，那必可不少的環境之一肯定是&lt;a href=&#34;http://nodejs.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Node.js&lt;/a&gt;。這裏通過安裝包一鍵安裝，亦可通過本地編譯完成安裝。
安裝 Node.js 的最佳方式是透過 &lt;a href=&#34;https://github.com/creationix/nvm&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Node Version Manager&lt;/a&gt;。感謝 nvm 的開發者提供簡易自動安裝的腳本指令：
cURL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Wget:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一旦安裝完成，重啟終端機並執行下列指令以安裝 Node.js。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nvm install stable
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安裝git&#34;&gt;安裝Git&lt;/h3&gt;

&lt;p&gt;安裝Git的最佳方式是透過&lt;a href=&#34;https://mxcl.github.com/homebrew/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;安裝。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安裝hexo&#34;&gt;安裝Hexo&lt;/h3&gt;

&lt;p&gt;在終端下執行下列指令以安裝Hexo。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g hexo-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;截至目前，便完成了Hexo的基本安裝。&lt;/p&gt;

&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;

&lt;p&gt;配置內容，比較複雜，供參考學習的資料網路上也是非常的多，但還是推薦也通讀一遍&lt;a href=&#34;https://hexo.io/zh-tw/docs/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Hexo官方文檔&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hexo init &amp;lt;folder&amp;gt;
cd &amp;lt;folder&amp;gt;
npm install 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如此網誌便已完成建立，在&lt;folder&gt;中會出現以下目錄
- _config.yml /*網站的配置文檔 */
- package.json /*nodejs的安裝包目錄 */
- scaffolds /&lt;em&gt;當您建立新文章時，Hexo 會根據 scaffold 來建立檔案&lt;/em&gt;/
- source /&lt;em&gt;原始檔案資料夾，放置檔案內容&lt;/em&gt;/
  - _drafts
  - _posts
 - themes /&lt;em&gt;主題資料夾&lt;/em&gt;/&lt;/p&gt;

&lt;h1 id=&#34;應用&#34;&gt;應用&lt;/h1&gt;

&lt;h2 id=&#34;指令&#34;&gt;指令&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;init
&lt;code&gt;$ hexo init [folder]&lt;/code&gt;
建立一個新的網站。如果沒有設定 folder 的話，Hexo 會在目前的資料夾建立網站。&lt;/li&gt;
&lt;li&gt;new
&lt;code&gt;$ hexo new [layout] &amp;lt;title&amp;gt;&lt;/code&gt;
建立一篇新的文章。如果沒有設定 layout 的話，則會使用 _config.yml 中的 default_layout 設定代替。如果標題包含空格的話，請使用引號括起來。&lt;/li&gt;
&lt;li&gt;generate
&lt;code&gt;$ hexo generate&lt;/code&gt;
產生靜態檔案。
-d, &amp;ndash;deploy    產生完成即部署網站
-w, &amp;ndash;watch 監看檔案變更&lt;/li&gt;
&lt;li&gt;publish
&lt;code&gt;$ hexo publish [layout] &amp;lt;filename&amp;gt;&lt;/code&gt;
發表草稿。&lt;/li&gt;
&lt;li&gt;server
&lt;code&gt;$ hexo server&lt;/code&gt;
啟動伺服器，預設是 &lt;a href=&#34;http://localhost:4000/。&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://localhost:4000/。&lt;/a&gt;
-p, &amp;ndash;port  覆蓋連接埠設定
-s, &amp;ndash;static    只使用靜態檔案
-l, &amp;ndash;log   啟動記錄器，或覆蓋記錄格式&lt;/li&gt;
&lt;li&gt;deploy
&lt;code&gt;$ hexo deploy&lt;/code&gt;
部署網站。
-g, &amp;ndash;generate  部署網站前先產生靜態檔案&lt;/li&gt;
&lt;li&gt;render
&lt;code&gt;$ hexo render &amp;lt;file&amp;gt; [file2] ...&lt;/code&gt;
渲染檔案。
-o, &amp;ndash;output    輸出位置&lt;/li&gt;
&lt;li&gt;migrate
&lt;code&gt;$ hexo migrate &amp;lt;type&amp;gt;&lt;/code&gt;
從其他系統 轉移內容。&lt;/li&gt;
&lt;li&gt;clean
&lt;code&gt;$ hexo clean&lt;/code&gt;
清除快取檔案 (db.json) 和已產生的靜態檔案 (public)。&lt;/li&gt;
&lt;li&gt;list
&lt;code&gt;$ hexo list &amp;lt;type&amp;gt;&lt;/code&gt;
列出網站資料。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;version
&lt;code&gt;$ hexo version&lt;/code&gt;
顯示版本資訊。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安全模式&lt;code&gt;hexo --safe&lt;/code&gt;
     在安全模式下，不會載入外掛和腳本。當您在安裝新外掛後遭遇問題時，可以嘗試以安全模式重新執行。&lt;/li&gt;
&lt;li&gt;除錯模式&lt;code&gt;hexo --debug&lt;/code&gt;
     在終端機中顯示除錯訊息並儲存記錄檔到 debug.log。當您碰到問題時，試著以除錯模式重新執行一次，並 把除錯訊息貼到 GitHub。&lt;/li&gt;
&lt;li&gt;安靜模式&lt;code&gt;hexo --silent&lt;/code&gt;
    隱藏終端機的訊息。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自訂配置檔的路徑
&lt;code&gt;$ hexo --config custom.yml&lt;/code&gt;
自訂配置檔的路徑而不是使用 _config.yml。此參數也接受以逗號分隔的 JSON 或 YAML 檔列表字串 (不得含有空格)，它們將會被合併產生一個 _multiconfig.yml。
&lt;code&gt;$ hexo --config custom.yml,custom2.json&lt;/code&gt;
顯示草稿
&lt;code&gt;$ hexo --draft&lt;/code&gt;
顯示 source/_drafts 資料夾中的草稿文章。
自定 CWD
&lt;code&gt;$ hexo --cwd /path/to/cwd&lt;/code&gt;
自訂目前工作目錄（Current working directory）的路徑。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Navicat Premium for Mac 破解教程</title>
      <link>https://kvylin.github.io/2018/navicat-premium-for-mac%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kvylin.github.io/2018/navicat-premium-for-mac%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/</guid>
      <description>

&lt;p&gt;本文僅以探討破解思路，請支持正版&lt;/p&gt;

&lt;h1 id=&#34;破解思路&#34;&gt;破解思路&lt;/h1&gt;

&lt;p&gt;替換RSA加密算法公匙（Navicat Premium for Mac中的公匙位於程序包目錄的rpk文件中）&lt;/p&gt;

&lt;h1 id=&#34;生成自己的rsa公匙私匙對&#34;&gt;生成自己的RSA公匙私匙對&lt;/h1&gt;

&lt;p&gt;使用open ssl工具生成，當然也可以使用其它工具&lt;a href=&#34;http://web.chacuo.net/netrsakeypair&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;在線生成工具&lt;/a&gt;生成，這裏需要注意的是&lt;code&gt;密匙是2048位，PKCS#8格式&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;替換rsa公匙&#34;&gt;替換RSA公匙&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;版本12.0.24之前，公匙存儲在&lt;strong&gt;Navicat Premium.app/Contents/Resources/rpk&lt;/strong&gt;，用文本編輯器打開它，替換上述生成的公匙&lt;/li&gt;

&lt;li&gt;&lt;p&gt;12.0.24之後，公匙不再存儲在&lt;strong&gt;Navicat Premium.app/Contents/Resources/rpk&lt;/strong&gt;中，而是放在了Navicat的二進制執行文件&lt;strong&gt;Navicat Premium.app/Contents/MacOS/Navicat Premium&lt;/strong&gt;中，通過搜索&lt;code&gt;-----BEGIN PUBLIC KEY-----&lt;/code&gt;找到它&lt;/p&gt;

&lt;h1 id=&#34;算出有效的mac版序列號密匙&#34;&gt;算出有效的Mac版序列號密匙&lt;/h1&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;序列號是一個16字節長度的字符串，是經過Base32編碼的，其實際存儲長度爲80位（8字節），輸入密匙後程序仍然會用Base33編碼，以二進制形式存儲比對。
正常的Base32編碼表順序是
&lt;code&gt;char EncodeTable[]=‘ABCDEFGHIJKLMNOPQRSTUVWXYZ234567’&lt;/code&gt;
80位長的二進制數據，可轉換成爲10個十六進制，如
第壹個8位二進制數據：68 /原作者表示不知是什麼，但不能改變；
第貳個8位二進制數據：2A /原作者表示不知是什麼，但不能改變；
第叄個8位二進制數據：00 /原作者表示不知是什麼，但可任意改變；
第肆個8位二進制數據：00 /原作者表示不知是什麼，但可任意改變；
第伍個8位二進制數據：00 /原作者表示不知是什麼，但可任意改變；
第陸個8位二進制數據：AA /第陸個和第柒個組合使用；
第柒個8位二進制數據：99 /第陸個和第柒個組合使用，目前已知0xAC 0x88代表英文版，0xCE 0x32代表簡體中文版，0xAA 0x99代表繁體中文版，0xAD 0x82代表日本語，0xBB 0x55代表Polski，0xAE 0x10代表Español，0xFA 0x20代表Français，0xB1 0x60代表Deutsch，0xB5 0x60代表한국어，0xEE 0x16代表Русский，0xCD 0x49代表Português；
第捌個8位二進制數據：65 /代表商業許可類型，0x65代表企業版，0x66代表教育版，0x67代表精簡版；（以上數據爲Navicat12版本）
第玖個8位二進制數據：C0 /這個8位數據的前4位必須是1100，轉換爲十進制就是12，代表版本12，數據的後4位不知道代表什麼，但是可以延遲激活使用時間，後4位可以是0000或0001；（以上數據爲Navicat12版本）
第拾個8位二進制數據：FF /代表許可的期限權利類型，0xFB代表30天不可轉售許可，0xFC代表90天不可轉售許可，0xFD代表365天不可轉售許可，0xFE代表不可轉售許可，0xFF代表站點許可；
如此，得到繁體中文版密匙的原始數據：&lt;code&gt;68 2A 00 00 00 AA 99 65 C0 FF&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;對密匙後8個8位數據進行DES對稱加密，使用DES加密算法，並採用ECB模式。這裏，需要加密的是爲&lt;code&gt;00 00 00 AA 99 65 C0 FF&lt;/code&gt;，DES加密密匙是&lt;code&gt;unsigned char DESKey = { 0x64, 0xAD, 0xF3, 0x2F, 0xAE, 0xF2, 0x1A, 0x27 }&lt;/code&gt;，計算得出加密後的序列號密匙數據，並將原始數據轉化爲二進制，按每5位一組，進行Base32編碼，轉爲十進制，按找Base32編碼表，便能得到了相應版本的密匙。&lt;/p&gt;

&lt;h1 id=&#34;解密激活請求碼-生成激活碼&#34;&gt;解密激活請求碼，生成激活碼&lt;/h1&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;啓動程序後，提示註冊，&lt;strong&gt;斷開網路，阻止程序聯網&lt;/strong&gt;，然後點擊註冊&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;根據提示，點擊手動激活，彈出離線激活請求，得到了程序給處的請求碼（這是一個Base64編碼的字符串，代表的是長度爲256字節的數據，這是離線激活請求信息被激活公匙加密的密文&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;經過RSA配對的私匙解密後，能得到激活請求信息（json風格）
&lt;code&gt;{
“K“: “xxxxxxxxxxxxxxxx”，
“P”: “Mac 10.13”，
“DI”: “xxxxxxxxxxxxxxxxxxxx”
}&lt;/code&gt;這裏包含了3個key：“K”、“DI”、“P”，分別代表序列號、設備識別碼（與電腦硬件信息相關）和平臺（操作系統類型）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;仍然通過RSA配對的私匙，使用上述的“K”和“DI”信息的json風格
&lt;code&gt;{
“DI” : “xxxxxxxxxxxxxxxxxxxx”,
“T” : “1535808471.925012”,
“K” : “xxxxxxxxxxxxxxxx”,
“N” : “DoubleLabyrinth”,
“O” : “Shadow”
}&lt;/code&gt;這裏包含了5個key：“K”、“DI”、“N”、“T” 、“O”，分別代表序列號、設備識別碼（與電腦硬件信息相關）、註冊名、授權時間、組織。&lt;strong&gt;其中“T”是必須的，且代表的時間必須位於當前時間-1~+4天之內，採用的是unix時間戳&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;輸入得到的離線激活回覆信息，激活完畢。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;參考鏈接：
&lt;a href=&#34;https://github.com/DoubleLabyrinth/navicat-keygen.git&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Double Sine&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关”余“</title>
      <link>https://kvylin.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kvylin.github.io/about/</guid>
      <description>

&lt;p&gt;#关于“余”&lt;/p&gt;

&lt;h2 id=&#34;这里&#34;&gt;这里&lt;/h2&gt;

&lt;h2 id=&#34;这里-1&#34;&gt;这里&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;- 这里
- 测试
- 2018.11
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>“W” 计划</title>
      <link>https://kvylin.github.io/2002/w-%E8%AE%A1%E5%88%92-2002.12.7/</link>
      <pubDate>Sat, 07 Dec 2002 00:00:00 +0000</pubDate>
      
      <guid>https://kvylin.github.io/2002/w-%E8%AE%A1%E5%88%92-2002.12.7/</guid>
      <description>

&lt;h1 id=&#34;w-计划&#34;&gt;“W” 计划&lt;/h1&gt;

&lt;h3 id=&#34;2141年6月7日-处在-m-se-sc的星球信息接收站的情报员瓦它诺接到了地球的sos-他立即向dragon-s-angel和merry-s-angel汇报-原来-地球遭到了外星人的破坏-他们洒下了大量的hjph-使地球上的环境惨不忍睹&#34;&gt;2141年6月7日，处在“M-SE”SC的星球信息接收站的情报员瓦它诺接到了地球的SOS。他立即向Dragon’s angel和Merry&amp;rsquo;s angel汇报。原来，地球遭到了外星人的破坏，他们洒下了大量的HJPH，使地球上的环境惨不忍睹。&lt;/h3&gt;

&lt;h3 id=&#34;因此-dragon-s-angel和merry-s-angel与地球上的-环境二兄弟-environment和purify取得联-准备从外星人手中夺取hjph的配制方案-以恢复地球原先的环境-使地球再次成为-环保天国&#34;&gt;因此，Dragon’s angel和Merry&amp;rsquo;s angel与地球上的“环境二兄弟”——Environment和Purify取得联，准备从外星人手中夺取HJPH的配制方案，以恢复地球原先的环境，使地球再次成为“环保天国”。&lt;/h3&gt;

&lt;h3 id=&#34;他们组成了-hb4-并将地球划分成三个区域-蓝天-陆地-海洋-同时实行-w-计划-dragon-s-angel负责全局-merry-s-angel负责蓝天区域-lt区-environment负责陆地区域-ld区-purify负责海洋区域-ly区&#34;&gt;他们组成了“HB4”并将地球划分成三个区域——蓝天、陆地、海洋，同时实行“W”计划。Dragon’s angel负责全局，Merry&amp;rsquo;s angel负责蓝天区域（LT区），Environment负责陆地区域（LD区），Purify负责海洋区域（LY区）。&lt;/h3&gt;

&lt;h3 id=&#34;话说dragon-s-angel和merry-s-angel乘坐着微型超光速宇宙飞船mgc-因为2141年的地球已经成了各星球的殖民地了-所以地球的大气层外一千公里都有激光束探测器-在离地球三千光年处发现ufo-激光束探测器发出了信号-正忙于把地球人做-实验品-的degemerate-rate博士收到这个信号后-立即发出命令-出动两个智能机器人集团-全力阻击-将ufo消灭-顿时-其他dsr的大门打开-五十万智能机器人从dsr向mgc飞去&#34;&gt;话说Dragon’s angel和Merry&amp;rsquo;s angel乘坐着微型超光速宇宙飞船MGC（因为2141年的地球已经成了各星球的殖民地了，所以地球的大气层外一千公里都有激光束探测器）。“在离地球三千光年处发现UFO。”激光束探测器发出了信号。正忙于把地球人做“实验品”的Degemerate Rate博士收到这个信号后，立即发出命令“出动两个智能机器人集团，全力阻击，将UFO消灭。”顿时，其他DSR的大门打开，五十万智能机器人从DSR向MGC飞去。&lt;/h3&gt;

&lt;h3 id=&#34;几秒钟后-在地球前方十光年处-由两个智能机器人组成的集团-bwz-出现-这时-dragon-s-angel驾驶的微型超光速宇宙飞船mgc发现-bwz-dragon-s-angel发出了超次声波的激光束-可是这对于-bwz-来说根本没有什么作用-反而-bwz-吸收了激光束-向mgc射击-merry-s-angel问道-我们现在该怎么办-dragon-s-angel-dragon-s-angel沉默了一秒钟-脸上露出了微笑-立即将mgc变形成一个微笑的机器人-这时-bwz-发出的激光束从这个机器人身边擦过-射向另一边的-bwz-成员-就这样-五十万智能机器人只剩下十二万智能机器人-它们向基地dsr发出求救信息-degemerate-rate博士十分恼火-就命令它们回到基地&#34;&gt;几秒钟后，在地球前方十光年处，由两个智能机器人组成的集团——“BWZ”出现。这时，Dragon’s angel驾驶的微型超光速宇宙飞船MGC发现“BWZ”。Dragon’s angel发出了超次声波的激光束。可是这对于“BWZ”来说根本没有什么作用，反而“BWZ”吸收了激光束，向MGC射击。Merry&amp;rsquo;s angel问道：“我们现在该怎么办，Dragon’s angel？”Dragon’s angel沉默了一秒钟，脸上露出了微笑，立即将MGC变形成一个微笑的机器人。这时，“BWZ”发出的激光束从这个机器人身边擦过，射向另一边的“BWZ”成员。就这样，五十万智能机器人只剩下十二万智能机器人。它们向基地DSR发出求救信息，Degemerate Rate博士十分恼火，就命令它们回到基地。&lt;/h3&gt;

&lt;h3 id=&#34;dragon-s-angel和merry-s-angel正在机器人内相互祝贺-就在这时-一个庞大的宇宙飞船eou在离它们十二光年处出现-dragon-s-angel的第六感觉告诉他-它们的灾难马上就要来临了-当他觉醒过来时-已经有一束比激光束还厉害100倍的光束向它们的机器人飞来-有不明光束向机器人飞来-十光年-八光年-五光年-二光年-一光年-正当dragon-s-angel做出最后决定-与eou决一死战时-environment和purify驾驶着ptc宇宙飞船前来帮助mgc-他们用ptc的底部将光束弹回-并在eou的头上投下一颗无污染的氢弹-顿时-浓烟包围了eou-任凭它怎样挣扎-却逃不出浓烟的范围-就这样-mgc在ptc的引导下-穿过大气层-躲过了激光束探测器的扫描-胜利地来到了environment和purify的基地-hgc&#34;&gt;Dragon’s angel和Merry&amp;rsquo;s angel正在机器人内相互祝贺。就在这时，一个庞大的宇宙飞船EOU在离它们十二光年处出现。Dragon’s angel的第六感觉告诉他，它们的灾难马上就要来临了。当他觉醒过来时，已经有一束比激光束还厉害100倍的光束向它们的机器人飞来。“有不明光束向机器人飞来，十光年，八光年，五光年，二光年，一光年，……”正当Dragon’s angel做出最后决定：与EOU决一死战时，Environment和Purify驾驶着PTC宇宙飞船前来帮助MGC。他们用PTC的底部将光束弹回，并在EOU的头上投下一颗无污染的氢弹。顿时，浓烟包围了EOU，任凭它怎样挣扎，却逃不出浓烟的范围。就这样，MGC在PTC的引导下，穿过大气层，躲过了激光束探测器的扫描，胜利地来到了Environment和Purify的基地——HGC。&lt;/h3&gt;

&lt;h3 id=&#34;environment知道属于他们的时间不多了-因为他们迟一秒钟完成-w-计划-就有十万地球人的生命面临危险-因此-他马上说-purify-你马上去准备一下-我们要立即与dragon-s-angel和merry-s-angel讨论-做出最后决定-如何将-w-计划布署得天衣无缝-过了三秒钟后-他们四人都已到场-purify把他们带进了一个数字化的密室-过了三天三夜-他们已经将所有的问题和可能会遇到的困难都解决了-现在唯一的问题就是兵力不够-因为environment的手中只有二百万个智能机器人集团-而要想打败degemerate-rate博士的机器人是绝对不可能的-经merry-s-angel提醒-dragon-s-angel用意念命令瓦它诺从-m-se-sc派出三百万个智能机器人集团师-瓦它诺向-m-se-sc的机器人基地发出信号-1631922310171844182625d-顿时-三百万个智能机器人集团师组成了zjlz-以每秒0-5光年的速度向地球进军-在离地球一千光年处-这三百万个智能机器人集团师根据dragon-s-angel发出的意念-成功地穿越了degemerate-rate博士设置的-地球保护墙-它们到地球后-全体变成生物形态-以防激光束探测器的扫描和跟踪-就这样-它们顺利地来到了dragon-s-angel的身边&#34;&gt;Environment知道属于他们的时间不多了，因为他们迟一秒钟完成“W”计划，就有十万地球人的生命面临危险。因此，他马上说：“Purify，你马上去准备一下，我们要立即与Dragon’s angel和Merry&amp;rsquo;s angel讨论，做出最后决定，如何将‘W’计划布署得天衣无缝。”过了三秒钟后，他们四人都已到场。Purify把他们带进了一个数字化的密室。过了三天三夜，他们已经将所有的问题和可能会遇到的困难都解决了，现在唯一的问题就是兵力不够。因为Environment的手中只有二百万个智能机器人集团，而要想打败Degemerate Rate博士的机器人是绝对不可能的。经Merry&amp;rsquo;s angel提醒，Dragon’s angel用意念命令瓦它诺从“M-SE”SC派出三百万个智能机器人集团师，瓦它诺向“M-SE”SC的机器人基地发出信号“1631922310171844182625D”。顿时，三百万个智能机器人集团师组成了ZJLZ，以每秒0.5光年的速度向地球进军。在离地球一千光年处，这三百万个智能机器人集团师根据Dragon’s angel发出的意念，成功地穿越了Degemerate Rate博士设置的“地球保护墙”。它们到地球后，全体变成生物形态，以防激光束探测器的扫描和跟踪。就这样，它们顺利地来到了Dragon’s angel的身边。&lt;/h3&gt;

&lt;h3 id=&#34;在2141年7月6日-dragon-s-angel-merry-s-angel-environment和purify正式实施-w-计划&#34;&gt;在2141年7月6日，Dragon’s angel、Merry&amp;rsquo;s angel、Environment和Purify正式实施“W”计划。&lt;/h3&gt;

&lt;h3 id=&#34;dragon-s-angel坐在一艘智能宇宙飞船上-为其他三位-hb4-成员提供敌方信息和资源-负责突破lt区-她派出一百万个智能机器人集团师-从正面向外星人发起挑战-再派出五十万个智能机器人集团精英-准备从外星人的后方突破防护线-再来个两面夹击-可她根本就没有想到degemerate-rate博士竟然会用他的最新研究成果-kzjqr-使merry-s-angel的五十万个智能机器人集团精英全部叛变-而且dragon-s-angel的指挥系统没有异常反应-merry-s-angel用意念问dragon-s-angel-怎么样-我的精英进展如何-dragon-s-angel的第六感觉告诉他-那五十万集团精英已经叛变-merry-s-angel对此十分恼火-准备命令一百万智能机器人集团师冲进去跟degemerate-rate博士的空中不对展开激烈地战斗-但dragon-s-angel说-merry-s-angel不要冲动-你先冷静下来-再与-环保二兄弟-商量商量-不过我们先得看一下他们的进展如何-你先撤出来-回到基地-merry-s-angel十分气愤-dragon-s-angel-你应该清除-损失五十万个智能机器人集团-对-m-se-sc来说是小事-但对地球目前的状况来说-就非常严重了-dragon-s-angel兴奋地说-merry-s-angel-环保二兄弟那儿也有消息了&#34;&gt;Dragon’s angel坐在一艘智能宇宙飞船上，为其他三位“HB4”成员提供敌方信息和资源，负责突破LT区。她派出一百万个智能机器人集团师，从正面向外星人发起挑战，再派出五十万个智能机器人集团精英，准备从外星人的后方突破防护线，再来个两面夹击。可她根本就没有想到Degemerate Rate博士竟然会用他的最新研究成果——KZJQR，使Merry&amp;rsquo;s angel的五十万个智能机器人集团精英全部叛变，而且Dragon’s angel的指挥系统没有异常反应。Merry&amp;rsquo;s angel用意念问Dragon’s angel：“怎么样，我的精英进展如何？”Dragon’s angel的第六感觉告诉他，那五十万集团精英已经叛变。Merry&amp;rsquo;s angel对此十分恼火，准备命令一百万智能机器人集团师冲进去跟Degemerate Rate博士的空中不对展开激烈地战斗。但Dragon’s angel说“Merry&amp;rsquo;s angel不要冲动，你先冷静下来，再与‘环保二兄弟’商量商量。不过我们先得看一下他们的进展如何，你先撤出来，回到基地。”Merry&amp;rsquo;s angel十分气愤“Dragon’s angel，你应该清除，损失五十万个智能机器人集团，对‘M-SE’SC来说是小事，但对地球目前的状况来说，就非常严重了。”Dragon’s angel兴奋地说：“Merry&amp;rsquo;s angel，环保二兄弟那儿也有消息了。”&lt;/h3&gt;

&lt;h3 id=&#34;原来-environment采取-诱兵之计-先集中一百二十五万个智能机器人集团师向ld区的后防线开火-直到ld区的后防线兵力不足-它们就会将所有能调动的集团师都调动过来-因此-它们的前线没有兵力了-environment用超次声波向dragon-s-angel求救-要求再派出五万个智能机器人集团师攻占ld区的前线-就这样-后防线的战斗持续了三个小时-前线却早已倍environment的部队占领-environment采用两面夹击战术将ld区占领&#34;&gt;原来，Environment采取“诱兵之计”。先集中一百二十五万个智能机器人集团师向LD区的后防线开火，直到LD区的后防线兵力不足，它们就会将所有能调动的集团师都调动过来。因此，它们的前线没有兵力了。Environment用超次声波向Dragon’s angel求救，要求再派出五万个智能机器人集团师攻占LD区的前线。就这样，后防线的战斗持续了三个小时，前线却早已倍Environment的部队占领。Environment采用两面夹击战术将LD区占领。&lt;/h3&gt;

&lt;h3 id=&#34;purify要想攻占ly区是比较困难的-因为在海洋钟中敌暗我明-dragon-s-angel对已经在总部的merry-s-angel说-没有想到-purify竟然只用了一个小时就将ly区的所有智能机器人全部变成无污染泡沫浮上了海面-原来-purify命令所有装有pmf弹的智能机器人分布在各个海域上空一千米处-然后下令将pmf弹投入海洋-不到二十分钟-看不见海面了-只有各种颜色的泡沫浮上了海面-接着-他们又将泡沫收集起来-带回总部-被改造成四个-超人&#34;&gt;“Purify要想攻占LY区是比较困难的。因为在海洋钟中敌暗我明。”Dragon’s angel对已经在总部的Merry&amp;rsquo;s angel说。没有想到，Purify竟然只用了一个小时就将LY区的所有智能机器人全部变成无污染泡沫浮上了海面。原来，Purify命令所有装有PMF弹的智能机器人分布在各个海域上空一千米处，然后下令将PMF弹投入海洋，不到二十分钟，看不见海面了，只有各种颜色的泡沫浮上了海面。接着，他们又将泡沫收集起来，带回总部，被改造成四个“超人”。&lt;/h3&gt;

&lt;h3 id=&#34;这样一来-整个地球的三分之二地区就被dragon-s-angel的机器人占领了-只剩下lt区在degemerate-rate博士的控制之下-hb4-成员都回到总部了-这时-dragon-s-angel急促地说-merry-s-angel-environment和purify准备实行-w-计划的第二方案-tp-接着-purify说-dragon-s-angel-我认为-我们应该先出动二百万个智能机器人集团师和三个-超人-以防rate博士进行反攻-environment觉得这个十分好-dragon-s-angel仍然在总部进行指挥-其他三位各自进入超人的内部-带领着三百万个智能机器人集团师精英区进攻lt区&#34;&gt;这样一来，整个地球的三分之二地区就被Dragon’s angel的机器人占领了。只剩下LT区在Degemerate Rate博士的控制之下。“HB4”成员都回到总部了。这时，Dragon’s angel急促地说：“Merry&amp;rsquo;s angel、Environment和Purify准备实行‘W’计划的第二方案——TP。”接着，Purify说：“Dragon’s angel，我认为，我们应该先出动二百万个智能机器人集团师和三个‘超人’，以防Rate博士进行反攻。”Environment觉得这个十分好。Dragon’s angel仍然在总部进行指挥，其他三位各自进入超人的内部，带领着三百万个智能机器人集团师精英区进攻LT区。&lt;/h3&gt;

&lt;h3 id=&#34;merry-s-angel说-我认为我们采取大规模进攻-与degemerate-rate博士决一死战-dragon-s-angel沉默了一下-因为在-m-se-sc上都采用这种方式-不知地球人是怎样进攻的-便问-environment你认为这种大规模进攻怎么样-于是-environment与purify商量了一下-说-我认为这样对我们的兵力影响很大-我建议利用火力引起敌人的注意-过三四天后-再进行偷袭-嵌入degemerate-rate博士的实验室-夺取hjph的配置方案-这样成功的希望要大一些-怎么样&#34;&gt;Merry&amp;rsquo;s angel说：“我认为我们采取大规模进攻，与Degemerate Rate博士决一死战。”Dragon’s angel沉默了一下（因为在“M-SE”SC上都采用这种方式，不知地球人是怎样进攻的），便问：“Environment你认为这种大规模进攻怎么样？”于是，Environment与Purify商量了一下，说：“我认为这样对我们的兵力影响很大，我建议利用火力引起敌人的注意，过三四天后，再进行偷袭，嵌入Degemerate Rate博士的实验室，夺取HJPH的配置方案。这样成功的希望要大一些，怎么样？”&lt;/h3&gt;

&lt;h3 id=&#34;dragon-s-angel听了微笑道-就按你的意思去办吧-就这样-三百万个智能机器人集团师向lt区发射了无数条激光束-dragon-s-angel得知已经突破防护线的消息后-就去支援其他三位-hb4-成员-这时-degemerate-rate博士的灵感告诉他-hb4-所有成员将要对lt区发起偷袭-但他也无能为力去阻止他们-因此-他们与degemerate-rate博士在实验室展开了激战-purify只要将一些被degemerate-rate博士做事的地球人救回基地-merry-s-angel负责寻找hjph的配制药房-其他两位成员要与degemerate-rate博士展开一场殊死的战斗&#34;&gt;Dragon’s angel听了微笑道：“就按你的意思去办吧。”就这样，三百万个智能机器人集团师向LT区发射了无数条激光束。Dragon’s angel得知已经突破防护线的消息后，就去支援其他三位“HB4”成员。这时，Degemerate Rate博士的灵感告诉他，“HB4”所有成员将要对LT区发起偷袭，但他也无能为力去阻止他们。因此，他们与Degemerate Rate博士在实验室展开了激战。Purify只要将一些被Degemerate Rate博士做事的地球人救回基地，Merry&amp;rsquo;s angel负责寻找HJPH的配制药房，其他两位成员要与Degemerate Rate博士展开一场殊死的战斗。&lt;/h3&gt;

&lt;h3 id=&#34;忽然-在这个密室里散发处一种-ch-的毒气-使得environment和dragon-s-angel全身忽冷忽热-生不如死-但是他们还坚持了半个小时-使merry-s-angel有更多的时间去寻找hjph的配制方案-可是-当她和purify回基地准备配制药剂时-degemerate-rate博士的实验室发出了一声足以使地球抖动的爆炸声-environment-dragon-s-angel和degemerate-rate博士同归于尽了&#34;&gt;忽然，在这个密室里散发处一种“CH”的毒气，使得Environment和Dragon’s angel全身忽冷忽热，生不如死。但是他们还坚持了半个小时，使Merry&amp;rsquo;s angel有更多的时间去寻找HJPH的配制方案。可是，当她和Purify回基地准备配制药剂时，Degemerate Rate博士的实验室发出了一声足以使地球抖动的爆炸声。Environment、Dragon’s angel和Degemerate Rate博士同归于尽了。&lt;/h3&gt;

&lt;h3 id=&#34;就这样-地球又恢复了原先的环境-地球又重新站起来了-m和purify告别后-带领所有部队回到了-m-se-sc-m在mgc上看地球-啊-地球太美了&#34;&gt;就这样，地球又恢复了原先的环境，地球又重新站起来了，M和Purify告别后，带领所有部队回到了“M-SE”SC。M在MGC上看地球，“啊！地球太美了！”&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>mikutap</title>
      <link>https://kvylin.github.io/chuyin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kvylin.github.io/chuyin/</guid>
      <description>

&lt;h1 id=&#34;mikutap-http-kvylin-com-mikutap&#34;&gt;&lt;a href=&#34;http://kvylin.com/mikutap&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;mikutap&lt;/a&gt;&lt;/h1&gt;
</description>
    </item>
    
  </channel>
</rss>